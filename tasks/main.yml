---
# tasks file for ansible-role-for-sonarqube

- name: Remove Java 7
  yum:
    name: java-1.7.0-openjdk
    state: removed

- name: Install Java 8
  yum:
    name: java-1.8.0-openjdk.x86_64
    state: installed

- name: Ensure unzip is installed on system
  yum:
    name: unzip
    state: present
  when: ansible_os_family == "RedHat"

- name: Ensure unzip is installed on system
  apt:
    name: unzip
    state: present
  when: ansible_os_family == "Debian"

- name: Installing PostgreSQL
  include_tasks: setup-postgresql.yml
  when: PostgresqlInstall == true 

- name: Ensure group "sonarqube" exists
  group:
    name: sonarqube
    state: present

- name: Create user sonarcube for running SonarCube services
  user:
    name: sonarqube
    group: sonarqube
    state: present

- name: Download sonar
  get_url:
    url: "{{sonar_download_url}}-{{sonar_version}}.zip"
    dest: /tmp/

- name: Unzip SonarCube binary
  unarchive:
    src: "/tmp/sonarqube-{{sonar_version}}.zip"
    dest: /opt/
    owner: sonarqube
    group: sonarqube
    remote_src: yes
    
- name: Create sonar dir
  shell: mkdir -p /opt/sonarqube

- name: Rename sonarqube-{{sonar_version}} to sonar
  shell: rsync -a /opt/sonarqube-{{sonar_version}}/* /opt/sonarqube/

- name: Update jdbc connection username
  shell: sed -i 's/#sonar.jdbc.username=/sonar.jdbc.username={{ sonar_pgsql_username }}/g' /opt/sonarqube/conf/sonar.properties

- name: Update jdbc connection password
  shell: sed -i 's/#sonar.jdbc.password=/sonar.jdbc.password={{ sonar_pgsql_password }}/g' /opt/sonarqube/conf/sonar.properties

- name: Update jdbc postgresql connection 
  shell: sed -i 's/#sonar.jdbc.url=jdbc:postgresql:\/\/localhost\/sonar/sonar.jdbc.url=jdbc:postgresql:\/\/{{ sonar_pgsql_host }}\/{{ sonar_pgsql_database }}/g' /opt/sonarqube/conf/sonar.properties

- name: Change owner for sonarqube dir
  file:
    path: /opt/sonarqube
    owner: sonarqube
    group: sonarqube
    mode: '0755'

- name: Configure Systemd service (for systemd systems)
  template:
    dest: /etc/systemd/system/sonar.service
    src: sonar.service.j2
    owner: root
    group: root
    mode: 0755
  when: "ansible_service_mgr == 'systemd'"

- name: Change Permission
  shell: chown -R sonarqube:sonarqube /opt/sonarqube/temp/

- name: Start the Sonarqube (for systemd systems)
  shell: systemctl start sonar
  when: "ansible_service_mgr == 'systemd'"

- name: Enable the SonarQube service to automatically start at boot time (for systemd systems)
  shell: systemctl enable sonar
  when: "ansible_service_mgr == 'systemd'"

- name: Configure Systemd service (for initd systems)
  template:
    dest: /etc/init.d/sonar
    src: initd.sonar.j2
    owner: root
    group: root
    mode: 0755
  when: "ansible_service_mgr != 'systemd'"

- name: Add sonar as init script for service management (for initd systems)
  shell: ln -sf /opt/sonarqube/bin/linux-x86-64/sonar.sh /usr/bin/sonar
  when: "ansible_service_mgr != 'systemd'"

- name: Add sonar to boot (for initd systems)
  shell: chkconfig --add sonar
  when: "ansible_service_mgr != 'systemd'"

- name: Start Sonarqube (for initd systems)
  shell: service sonar start
  become: true
  become_user: sonarqube
  when: "ansible_service_mgr != 'systemd'"
